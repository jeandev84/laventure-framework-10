<?php

declare(strict_types=1);

namespace Laventure\Component\Http\Message\Request\Params;

use Laventure\Component\Http\Message\Request\File\UploadedFile;
use Laventure\Component\Http\Parameter\Parameter;
use Psr\Http\Message\UploadedFileInterface;

/**
 * UploadedFiles
 *
 * @author Jean-Claude <jeanyao@ymail.com>
 *
 * @license https://github.com/jeandev84/laventure-framework/blob/master/LICENSE
 *
 * @package  Laventure\Component\Http\Message\Request\Params
 */
class FileParams extends Parameter
{



      /**
       * @param array $params
       *
       * @return $this
     */
     public function add(array $params): static
     {
         $params = $this->transformInformationFiles($params);

         foreach ($params as $id => $files) {
              foreach ($files as $file) {
                   $this->params[$id][] = $this->createUploadedFileFromArray($file);
              }
         }

         return $this;
     }




     /**
      * @param array $files
      * @return array
     */
     public function transformInformationFiles(array $files): array
     {
         $transformed = [];

         foreach ($files as $name => $fileInfo) {
             if (is_array($fileInfo['name'])) {
                 foreach ($fileInfo as $attribute => $file) {
                     foreach ($file as $index => $value) {
                         $transformed[$name][$index][$attribute] = $value;
                     }
                 }
             }else{
                 $transformed[$name][] = $fileInfo;
             }
         }

         return $transformed;
     }



     /**
      * @param string $id
      *
      * @param UploadedFile $file
      *
      * @return $this
     */
     public function setUploadedFile(string $id, UploadedFile $file): static
     {
          return $this->set($id, $file);
     }






     /**
      * @return UploadedFileInterface[]
     */
     public function all(): array
     {
         return parent::all(); // TODO: Change the autogenerated stub
     }




    /**
     * @param array $file
     *
     * @return UploadedFile
    */
    public function createUploadedFileFromArray(array $file): UploadedFile
    {
        return new UploadedFile(
            $file['name'],
            $file['full_path'],
            $file['type'],
            $file['tmp_name'],
            $file['error'],
            $file['size']
        );
    }
}
